数据解析分类：
    正则表达式
    bs4
    xpath（主要）

数据解析原理：
    解析的局部的文本内容都会在标签之间或标签对应的属性中进行存储
    首先要定位指定的标签
    然后对该标签对应的属性中存储的数据值进行提取


正则解析：
    （文本硬解析）
    <div class="thumb">
    <a href="/article/121721100" target="_blank">
    <img src="//pic.qiushibaike.com/system.pictures.12172/121721100/....." alt...>
    </a>
    </div>

    ex = '<div class="thumb">.*?<img src="(.*?)"> alt.*?</div>'


bs4解析：
    1.实例化一个BeautifulSoup对象，并且将页面源码数据加载到该对象中
    2.通过调用BeautifulSoup对象中相关的属性或者方法进行标签定位和数据提取

    需要安装bs4和lxml
    pip install bs4
    pip install lxml

xpath解析：
    最常用且最便捷高效的解析方式
    1.实例化一个etree的对象，且需要将被解析的页面源码加载到该对象中
    2.调用etree中的xpath方法结合着xpath表达式实现标签的定位和内容的捕获

    需要安装lxml

    1./:表示从根节点开始定位，表示一个层级
    mylist = tree.xpath('/html/head/title')
    2.//表示多个层级.或者任意位置的层级
    mylist = tree.xpath('//title')
    3.属性定位 tag[@attrName="attrValue"]
    mylist = tree.xpath('//div[@class="song"]')
    4.索引定位(索引从1开始，而不是0)
    mylist = tree.xpath('//div[@class="song"]/p[3]')
    5.获取数据
    5.1./text() 获取的是标签中直系的文本内容
    5.2.//text() 获取的是标签中所有的文本内容
    mytext = tree.xpath('//div[@class="tang"]/ul/li[5]/a/text()')[0]
    6.获取属性值
    mypic = tree.xpath('//div[@class="song"]/img/@src')